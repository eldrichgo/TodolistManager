package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"
	model1 "survey/graph/model"
)

// CreateSurvey is the resolver for the createSurvey field.
func (r *mutationResolver) CreateSurvey(ctx context.Context, name string, description *string, questions []string) (*model1.Survey, error) {
	panic(fmt.Errorf("not implemented: CreateSurvey - createSurvey"))
}

// Surveys is the resolver for the surveys field.
func (r *queryResolver) Surveys(ctx context.Context) ([]*model1.Survey, error) {
	panic(fmt.Errorf("not implemented: Surveys - surveys"))
}

// Survey is the resolver for the survey field.
func (r *queryResolver) Survey(ctx context.Context, id string) (*model1.Survey, error) {
	panic(fmt.Errorf("not implemented: Survey - survey"))
}

// Questions is the resolver for the questions field.
func (r *surveyResolver) Questions(ctx context.Context, obj *model1.Survey) ([]*model1.Question, error) {
	panic(fmt.Errorf("not implemented: Questions - questions"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// Survey returns SurveyResolver implementation.
func (r *Resolver) Survey() SurveyResolver { return &surveyResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type surveyResolver struct{ *Resolver }
